syntax = "proto3";
package tws.proto.job;

option java_package = "edu.iu.dsc.tws.proto.system.job";
option java_outer_classname = "JobAPI";

// a worker can be any one of these states
enum JobState {
    STARTING = 0;
    STARTED = 1;
    COMPLETED = 2;
    FAILED = 3;
    KILLED = 4;
}

enum JobFormatType {
    JAR = 0;
    JAVA_ZIP = 1;
    PYTHON = 2;
    PYTHON_ZIP = 3;
}

message JobFormat {
    JobFormatType type = 1;
    string job_file = 2;
}

// defines the job parameters. This will define the required resources for the job,
// what type of a job this is (a basic container job, fully featured dataflow job etc)
message Config {
    message KeyValue {
        string key = 1;
        // Only one of the below are set
        string value = 2;
        bytes serialized_value = 3;
    }
    repeated KeyValue kvs = 1;
    map<string, bytes> config_byte_map = 2;
}

// compute resource for a worker
// cpu as a double, can be fractional
// RAM as mega bytes
// Disk as giga bytes. Disk is volatile disk.
// instances: number of instances that will be created from this compute resource
// workers_per_pod: in kubernetes, on each compute resource (on each pod)
//                  this many workers will be started
//                  number of workers running on this resource type is: instances * workers_per_pod
// index: a unique index is assigned to each resource starting from 0
message ComputeResource {
    double cpu = 1;
    int32 ram_mega_bytes = 2;
    double disk_giga_bytes = 3;
    int32 instances = 4;
    int32 workers_per_pod = 5;

    oneof scalableRequired {
        bool scalable = 6;
    }
    oneof indexRequired {
        int32 index = 7;
    }
}

// this is a Twister job.
message Job {
    string job_name = 1;
    // automatically generated job-id
    string job_id = 2;
    // worker class to run
    string worker_class_name = 3;
    // driver class to run
    string driver_class_name = 4;

    int32 number_of_workers = 5;
    // the requested resources
    repeated ComputeResource compute_resource = 6;
    // the configurations specified
    Config config = 7;
    // how the job is layed out
    JobFormat job_format = 8;
}